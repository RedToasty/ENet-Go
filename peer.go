package enetgo

/*
#cgo windows LDFLAGS: -L. -lenet
#cgo linux LDFLAGS: -L/usr/local/lib -lenet
#cgo CFLAGS: -I/include/ -DENET_NO_PRAGMA_LINK
 #include "enet.h"
*/
import "C"

type ENetPeer C.ENetPeer
type ENetPeerState int

const (
	ENET_PEER_STATE_DISCONNECTED             = ENetPeerState(C.ENET_PEER_STATE_DISCONNECTED)
	ENET_PEER_STATE_CONNECTING               = ENetPeerState(C.ENET_PEER_STATE_CONNECTING)
	ENET_PEER_STATE_ACKNOWLEDGING_CONNECT    = ENetPeerState(C.ENET_PEER_STATE_ACKNOWLEDGING_CONNECT)
	ENET_PEER_STATE_CONNECTION_PENDING       = ENetPeerState(C.ENET_PEER_STATE_CONNECTION_PENDING)
	ENET_PEER_STATE_CONNECTION_SUCCEEDED     = ENetPeerState(C.ENET_PEER_STATE_CONNECTION_SUCCEEDED)
	ENET_PEER_STATE_CONNECTED                = ENetPeerState(C.ENET_PEER_STATE_CONNECTED)
	ENET_PEER_STATE_DISCONNECT_LATER         = ENetPeerState(C.ENET_PEER_STATE_DISCONNECT_LATER)
	ENET_PEER_STATE_DISCONNECTING            = ENetPeerState(C.ENET_PEER_STATE_DISCONNECTING)
	ENET_PEER_STATE_ACKNOWLEDGING_DISCONNECT = ENetPeerState(C.ENET_PEER_STATE_ACKNOWLEDGING_DISCONNECT)
	ENET_PEER_STATE_ZOMBIE                   = ENetPeerState(C.ENET_PEER_STATE_ZOMBIE)
)

func (peer *ENetPeer) GetState() ENetPeerState {
	return ENetPeerState((*C.ENetPeer)(peer).state)
}
